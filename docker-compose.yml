# -----------------------------------------------
#1 docker-compose -p comp3095-microservices-ecommerce -f docker-compose.yml up -d
#        ---------This command will start the containers in detached mode without rebuilding the image (if they exist)
#
#2. docker-compose -p comp3095-microservices-ecommerce -f docker-compose.yml up -d --build
#        ---------This command forces the rebuild if all image, even if they already exists, before starting the containers
#------------------------------------------------
version: '3.9'

services:

  product-service:
    image: product-service
    ports:
      - "8084:8084"
    build:
      context: ./product-service     #this directory where dockerfile resides
      dockerfile: ./Dockerfile       #specify this DockerFile for  use to build image
    container_name: product-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  mongodb:
     image: mongo:latest
     container_name: mongodb
     ports:
       - "27018:27017"
     environment:
       - MONGO_INITDB_ROOT_USERNAME=admin
       - MONGO_INITDB_ROOT_PASSWORD=password
     volumes:
       - ./data/mongo/products:/data/db
       - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
     command: mongod --auth
     networks:
       - spring


  mongo-express:
       image: mongo-express
       ports:
         - "8081:8081"
       environment:
         - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
         - ME_CONFIG_MONGODB_ADMINPASSWORD=password
         - ME_CONFIG_MONGODB_SERVER=mongodb  #connect to mongo-express to the mongodb conntainer by name
       container_name: mongo-express
       #restart: unless-stopped
       depends_on:
         - mongodb
       networks:
         - spring
volumes:
    mongodb:
     driver: local

networks:
    spring:
      driver: bridge
